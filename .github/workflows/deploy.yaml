name: CDK deploy
on:
  push:
    branches: 
      - main

jobs:
  deploy:
    name: Deploy Integration
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    defaults:
      run:
        working-directory: .
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v3

    - name: Setup Node v18
      uses: actions/setup-node@v4
      with:
        node-version: 18

    - name: Configure AWS Credentials for WizeAuto GPT
      uses: aws-actions/configure-aws-credentials@v4
      with:
        audience: sts.amazonaws.com
        aws-region: us-east-1
        role-to-assume: "arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/github-actions-autogpt-trust-policy"
        role-duration-seconds: 1800
        role-session-name: ${{ github.actor }}
  
    - name: Publish Secrets
      id: PublishSecrets
      shell: bash
      run: |
        aws secretsmanager create-secret --name OPENAI_API_KEY \
          --description "OPEN IA API Key" \
          --secret-string ${{ secrets.OPENAI_API_KEY }} \
          --region ${{ secrets.AWS_REGION }} 2>/dev/null || aws secretsmanager update-secret --secret-id OPENAI_API_KEY \
            --secret-string ${{ secrets.OPENAI_API_KEY }} \
            --region ${{ secrets.AWS_REGION }}
        aws secretsmanager create-secret --name SERPER_API_KEY \
          --description "SERPER API Key" \
          --secret-string ${{ secrets.SERPER_API_KEY }} \
          --region ${{ secrets.AWS_REGION }} 2>/dev/null || aws secretsmanager update-secret --secret-id SERPER_API_KEY \
            --secret-string ${{ secrets.SERPER_API_KEY }} \
            --region ${{ secrets.AWS_REGION }}

    - name: create-json
      id: create-json
      uses: jsdaniell/create-json@v1.2.2
      with:
        name: "drive_client_secret.json"
        json: ${{ secrets.GCP_ACCOUNT_SERVICES }}

    - name: Install dependencies
      id: dependencies
      shell: bash
      run: |
        sudo npm install -g aws-cdk

    - name: Deploy
      id: deploy
      shell: bash
      env:
        AWS_REGION: ${{ secrets.AWS_REGION }}
      run: |
        python3 -m venv .venv
        source .venv/bin/activate
        pip install -r requirements.txt
        cdk bootstrap aws://${{ secrets.AWS_ACCOUNT_ID }}/${{ secrets.AWS_REGION }}
        cdk synth
        cdk deploy --require-approval never
